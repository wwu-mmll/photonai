{
    "name": "mog",
    "verbosity": 0,
    "permutation_id": null,
    "cache_folder": null,
    "nr_of_processes": 1,
    "random_seed": null,
    "inner_cv": {
        "n_splits": 10,
        "random_state": 42,
        "shuffle": true,
        "__photon_type": "KFold"
    },
    "outer_cv": {
        "n_splits": 5,
        "random_state": 42,
        "shuffle": true,
        "__photon_type": "KFold"
    },
    "calculate_metrics_across_folds": false,
    "use_test_set": false,
    "test_size": 0.2,
    "calculate_metrics_per_fold": true,
    "performance_constraints": {},
    "optimizer": "random_grid_search",
    "optimizer_params": {
        "n_configurations": 30
    },
    "metrics": [
        "balanced_accuracy",
        "specificity",
        "precision",
        "recall",
        "f1_score",
        "matthews_corrcoef"
    ],
    "best_config_metric": "balanced_accuracy",
    "project_folder": "MOG_ML",
    "output_settings": {
        "mongodb_connect_url": null,
        "save_output": true,
        "overwrite_results": false,
        "user_id": "",
        "wizard_object_id": "",
        "wizard_project_name": "",
        "__photon_type": "OutputSettings"
    },
    "elements": [
        {
            "initial_name": "SimpleImputer",
            "kwargs": {
                "missing_values": NaN
            },
            "test_disabled": false,
            "__photon_type": "PipelineElement"
        },
        {
            "initial_name": "StandardScaler",
            "test_disabled": false,
            "__photon_type": "PipelineElement"
        },
        {
            "batch_size": 0,
            "current_element": [
                1,
                1
            ],
            "disabled": false,
            "elements": [
                {
                    "initial_hyperparameters": {
                        "C": [
                            1e-08,
                            1e-06,
                            0.0001,
                            0.01,
                            1,
                            100.0,
                            10000.0,
                            1000000.0,
                            100000000.0
                        ],
                        "kernel": [
                            "rbf",
                            "linear"
                        ]
                    },
                    "initial_name": "SVC",
                    "kwargs": {
                        "max_iter": 1000
                    },
                    "test_disabled": false,
                    "__photon_type": "PipelineElement"
                },
                {
                    "initial_hyperparameters": {
                        "max_features": [
                            "sqrt",
                            "log2"
                        ],
                        "min_samples_leaf": [
                            0.01,
                            0.1,
                            0.2
                        ]
                    },
                    "initial_name": "RandomForestClassifier",
                    "test_disabled": false,
                    "__photon_type": "PipelineElement"
                },
                {
                    "initial_hyperparameters": {
                        "n_estimators": [
                            10,
                            25,
                            50
                        ]
                    },
                    "initial_name": "AdaBoostClassifier",
                    "test_disabled": false,
                    "__photon_type": "PipelineElement"
                },
                {
                    "initial_hyperparameters": {
                        "C": [
                            0.0001,
                            0.01,
                            1,
                            100.0,
                            10000.0
                        ],
                        "penalty": [
                            "l1",
                            "l2"
                        ]
                    },
                    "initial_name": "LogisticRegression",
                    "kwargs": {
                        "solver": "saga",
                        "n_jobs": 1
                    },
                    "test_disabled": false,
                    "__photon_type": "PipelineElement"
                },
                {
                    "initial_name": "GaussianNB",
                    "test_disabled": false,
                    "__photon_type": "PipelineElement"
                },
                {
                    "initial_hyperparameters": {
                        "n_neighbors": [
                            5,
                            10,
                            15
                        ]
                    },
                    "initial_name": "KNeighborsClassifier",
                    "test_disabled": false,
                    "__photon_type": "PipelineElement"
                },
                {
                    "initial_name": "LinearDiscriminantAnalysis",
                    "test_disabled": false,
                    "__photon_type": "PipelineElement"
                }
            ],
            "elements_dict": {
                "SVC": {
                    "initial_hyperparameters": {
                        "C": [
                            1e-08,
                            1e-06,
                            0.0001,
                            0.01,
                            1,
                            100.0,
                            10000.0,
                            1000000.0,
                            100000000.0
                        ],
                        "kernel": [
                            "rbf",
                            "linear"
                        ]
                    },
                    "initial_name": "SVC",
                    "kwargs": {
                        "max_iter": 1000
                    },
                    "test_disabled": false,
                    "__photon_type": "PipelineElement"
                },
                "RandomForestClassifier": {
                    "initial_hyperparameters": {
                        "max_features": [
                            "sqrt",
                            "log2"
                        ],
                        "min_samples_leaf": [
                            0.01,
                            0.1,
                            0.2
                        ]
                    },
                    "initial_name": "RandomForestClassifier",
                    "test_disabled": false,
                    "__photon_type": "PipelineElement"
                },
                "AdaBoostClassifier": {
                    "initial_hyperparameters": {
                        "n_estimators": [
                            10,
                            25,
                            50
                        ]
                    },
                    "initial_name": "AdaBoostClassifier",
                    "test_disabled": false,
                    "__photon_type": "PipelineElement"
                },
                "LogisticRegression": {
                    "initial_hyperparameters": {
                        "C": [
                            0.0001,
                            0.01,
                            1,
                            100.0,
                            10000.0
                        ],
                        "penalty": [
                            "l1",
                            "l2"
                        ]
                    },
                    "initial_name": "LogisticRegression",
                    "kwargs": {
                        "solver": "saga",
                        "n_jobs": 1
                    },
                    "test_disabled": false,
                    "__photon_type": "PipelineElement"
                },
                "GaussianNB": {
                    "initial_name": "GaussianNB",
                    "test_disabled": false,
                    "__photon_type": "PipelineElement"
                },
                "KNeighborsClassifier": {
                    "initial_hyperparameters": {
                        "n_neighbors": [
                            5,
                            10,
                            15
                        ]
                    },
                    "initial_name": "KNeighborsClassifier",
                    "test_disabled": false,
                    "__photon_type": "PipelineElement"
                },
                "LinearDiscriminantAnalysis": {
                    "initial_name": "LinearDiscriminantAnalysis",
                    "test_disabled": false,
                    "__photon_type": "PipelineElement"
                }
            },
            "estimator_name": "",
            "hyperparameters": {
                "final_estimator__current_element": [
                    [
                        0,
                        0
                    ],
                    [
                        0,
                        1
                    ],
                    [
                        0,
                        2
                    ],
                    [
                        0,
                        3
                    ],
                    [
                        0,
                        4
                    ],
                    [
                        0,
                        5
                    ],
                    [
                        0,
                        6
                    ],
                    [
                        0,
                        7
                    ],
                    [
                        0,
                        8
                    ],
                    [
                        0,
                        9
                    ],
                    [
                        0,
                        10
                    ],
                    [
                        0,
                        11
                    ],
                    [
                        0,
                        12
                    ],
                    [
                        0,
                        13
                    ],
                    [
                        0,
                        14
                    ],
                    [
                        0,
                        15
                    ],
                    [
                        0,
                        16
                    ],
                    [
                        0,
                        17
                    ],
                    [
                        1,
                        0
                    ],
                    [
                        1,
                        1
                    ],
                    [
                        1,
                        2
                    ],
                    [
                        1,
                        3
                    ],
                    [
                        1,
                        4
                    ],
                    [
                        1,
                        5
                    ],
                    [
                        2,
                        0
                    ],
                    [
                        2,
                        1
                    ],
                    [
                        2,
                        2
                    ],
                    [
                        3,
                        0
                    ],
                    [
                        3,
                        1
                    ],
                    [
                        3,
                        2
                    ],
                    [
                        3,
                        3
                    ],
                    [
                        3,
                        4
                    ],
                    [
                        3,
                        5
                    ],
                    [
                        3,
                        6
                    ],
                    [
                        3,
                        7
                    ],
                    [
                        3,
                        8
                    ],
                    [
                        3,
                        9
                    ],
                    [
                        4,
                        0
                    ],
                    [
                        5,
                        0
                    ],
                    [
                        5,
                        1
                    ],
                    [
                        5,
                        2
                    ],
                    [
                        6,
                        0
                    ]
                ]
            },
            "identifier": "SWITCH:",
            "initial_name": "final_estimator",
            "is_estimator": true,
            "is_transformer": true,
            "name": "final_estimator",
            "needs_covariates": true,
            "needs_y": true,
            "pipeline_element_configurations": [
                [
                    {
                        "SVC__C": 1e-08,
                        "SVC__kernel": "rbf"
                    },
                    {
                        "SVC__C": 1e-08,
                        "SVC__kernel": "linear"
                    },
                    {
                        "SVC__C": 1e-06,
                        "SVC__kernel": "rbf"
                    },
                    {
                        "SVC__C": 1e-06,
                        "SVC__kernel": "linear"
                    },
                    {
                        "SVC__C": 0.0001,
                        "SVC__kernel": "rbf"
                    },
                    {
                        "SVC__C": 0.0001,
                        "SVC__kernel": "linear"
                    },
                    {
                        "SVC__C": 0.01,
                        "SVC__kernel": "rbf"
                    },
                    {
                        "SVC__C": 0.01,
                        "SVC__kernel": "linear"
                    },
                    {
                        "SVC__C": 1,
                        "SVC__kernel": "rbf"
                    },
                    {
                        "SVC__C": 1,
                        "SVC__kernel": "linear"
                    },
                    {
                        "SVC__C": 100.0,
                        "SVC__kernel": "rbf"
                    },
                    {
                        "SVC__C": 100.0,
                        "SVC__kernel": "linear"
                    },
                    {
                        "SVC__C": 10000.0,
                        "SVC__kernel": "rbf"
                    },
                    {
                        "SVC__C": 10000.0,
                        "SVC__kernel": "linear"
                    },
                    {
                        "SVC__C": 1000000.0,
                        "SVC__kernel": "rbf"
                    },
                    {
                        "SVC__C": 1000000.0,
                        "SVC__kernel": "linear"
                    },
                    {
                        "SVC__C": 100000000.0,
                        "SVC__kernel": "rbf"
                    },
                    {
                        "SVC__C": 100000000.0,
                        "SVC__kernel": "linear"
                    }
                ],
                [
                    {
                        "RandomForestClassifier__max_features": "sqrt",
                        "RandomForestClassifier__min_samples_leaf": 0.01
                    },
                    {
                        "RandomForestClassifier__max_features": "sqrt",
                        "RandomForestClassifier__min_samples_leaf": 0.1
                    },
                    {
                        "RandomForestClassifier__max_features": "sqrt",
                        "RandomForestClassifier__min_samples_leaf": 0.2
                    },
                    {
                        "RandomForestClassifier__max_features": "log2",
                        "RandomForestClassifier__min_samples_leaf": 0.01
                    },
                    {
                        "RandomForestClassifier__max_features": "log2",
                        "RandomForestClassifier__min_samples_leaf": 0.1
                    },
                    {
                        "RandomForestClassifier__max_features": "log2",
                        "RandomForestClassifier__min_samples_leaf": 0.2
                    }
                ],
                [
                    {
                        "AdaBoostClassifier__n_estimators": 10
                    },
                    {
                        "AdaBoostClassifier__n_estimators": 25
                    },
                    {
                        "AdaBoostClassifier__n_estimators": 50
                    }
                ],
                [
                    {
                        "LogisticRegression__C": 0.0001,
                        "LogisticRegression__penalty": "l1"
                    },
                    {
                        "LogisticRegression__C": 0.0001,
                        "LogisticRegression__penalty": "l2"
                    },
                    {
                        "LogisticRegression__C": 0.01,
                        "LogisticRegression__penalty": "l1"
                    },
                    {
                        "LogisticRegression__C": 0.01,
                        "LogisticRegression__penalty": "l2"
                    },
                    {
                        "LogisticRegression__C": 1,
                        "LogisticRegression__penalty": "l1"
                    },
                    {
                        "LogisticRegression__C": 1,
                        "LogisticRegression__penalty": "l2"
                    },
                    {
                        "LogisticRegression__C": 100.0,
                        "LogisticRegression__penalty": "l1"
                    },
                    {
                        "LogisticRegression__C": 100.0,
                        "LogisticRegression__penalty": "l2"
                    },
                    {
                        "LogisticRegression__C": 10000.0,
                        "LogisticRegression__penalty": "l1"
                    },
                    {
                        "LogisticRegression__C": 10000.0,
                        "LogisticRegression__penalty": "l2"
                    }
                ],
                [
                    null
                ],
                [
                    {
                        "KNeighborsClassifier__n_neighbors": 5
                    },
                    {
                        "KNeighborsClassifier__n_neighbors": 10
                    },
                    {
                        "KNeighborsClassifier__n_neighbors": 15
                    }
                ],
                [
                    null
                ]
            ],
            "random_state": false,
            "sklearn_name": "final_estimator__current_element",
            "test_disabled": false,
            "__photon_type": "ClassifierSwitch"
        }
    ]
}